language: r
warnings_are_errors: true
cache: false
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: trusty
addons:
  apt:
    packages:
    - libcurl4-openssl-dev
    - libxml2-dev
    - libfftw3-dev
    - libgsl0-dev
    - libgsl0ldbl
    - mesa-common-dev
    - libglu1-mesa-dev
    - devscripts
os:
- linux
- osx
osx_image: xcode9.4
services:
- xvfb
r:
- 3.3
- 3.4
- 3.5
- release
- devel
matrix:
  allow_failures:
  - r: devel
env:
  global:
  - RGL_USE_NULL=TRUE
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
  - R_REMOTES_NO_ERRORS_FROM_WARNINGS=true
  - _R_CHECK_FORCE_SUGGESTS_=false
  - secure: lNPVmgrMXJYbdQm4ygxB8jOtpDCFo9V23ZaHL+pgLzc7XbpFypF4yoR1wVM1E2a3eKt1gsvYEdkj6AyYFYtM/jztI1v4PAqcJoE40Ng6xpicYzg/vr6l+fP0biQLCUjQuZjQmxlxhp6lEtnwR92K242S6U+Bg87VoXXm5PtVsi4pWz+CzcoKgAYsTuEjPbgsl4KF4XXLGo8x1g99vNSkLQ3ElcwYC70nPm0n1FeHJMgLAt+Jvih7RBN6krvnmAdM7tXoWTtXXBJup0rYzY9E1XoTz3dqvJPJHBUywOLftXzHN0Av7oyp13DCrC/HQiSsNSiFIODaUdKA8ixTsmQ2RxOMfWWxdraaDtw2e00mXi6l/C9mMyO8bZwkMeBk0NzFNRhxCm8H98lh75tAmtm65XSd5Ss/y8qT0T12jvwGwFKhEjrrcHDpvsQKrpgoYlOLNljioBCtcahpo5NTxwSEPVfhkdnIwOFPQWCCn4M6jfcqMNRSNI9TC+lBrSdNr8muuCBXRVV4B/dgtx8ybgd8Lt49Kb/0BCuM1Y7Nags8TfIK8PISkspsX9ts5sjKC1DLyKdofErt2gKBJ4p50R/0YO3BB1+bdX7zQwQdstVc6fqfwiU8CMk+rn+vu7oixqIA35MO1XhcRiZcsic8VyMH7rPD4et5hee9u+V7i4EHufo=
r_check_args: "--as-cran --install-args=--build"
before_install:
- ulimit -n 2048
- export PROJ_DIR=`basename $PWD`
- fname=travis_helpers.sh
- wget -O ${fname} http://bit.ly/travis_helpers
- cat ${fname}; source ${fname}; rm ${fname}
- cat DESCRIPTION
- codename=`linux_codename`;
- if [ "${codename}" = "trusty" ]; then start_xvfb ; fi
- export rver=`r_version`; echo $rver ;
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then no_open_mp ; brew install -v freetype ; fi
- jags_install || true;
- if `need_v8`; then v8_install || true; fi
- dcmtk_install || true;
- gsl_install 2.1 || true ;
- export cmake_version="3.11"
- cmake --version
- x=`cmake_setup`; echo "${x}"; eval ${x};
- cmake --version
- remove_neuroc_packages
- cat DESCRIPTION
- install_remotes_no_dep
- cat DESCRIPTION
- export PACKAGE_NAME=`package_name`
- echo "Package Name is $PACKAGE_NAME"
- if [[ "${PACKAGE_NAME}" == "waveslim" ]]; then fftw_install ; fi
- if [[ "${PACKAGE_NAME}" == "dti" || "${PACKAGE_NAME}" == "qMRI" ]]; then gsl_install
  ; fi
- if [[ "${PACKAGE_NAME}" == "ROpenCVLite" || "${PACKAGE_NAME}" == "Rvision" ]]; then
  shopt -s expand_aliases ; x=`Rscript -e "cat(Sys.which('R'))"` ; echo "reset R"
  ; alias R="travis_wait 100 ${x}" ; fi
- install_python_requirements ;
- R CMD javareconf ;
after_success:
- dump_logs
after_failure:
- dump_logs
before_deploy:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then PKG_TARBALL=$(ls -1t *.tgz | head -n 1);
  PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tgz/_'"R${rver}"'.tgz/'` ; mv ${PKG_TARBALL}
  ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}" ; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then PKG_TARBALL=$(ls -1t *.tar.gz | head -n
  1); PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'`
  ; mv ${PKG_TARBALL} ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}"
  ; fi
- if [[ "${TRAVIS_OS_NAME}" = "osx" ]]; then rm -f *.tar.gz; fi
deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  overwrite: true
  file: "${PACKAGE_NAME}*.t*gz"
  on:
    tags: true
  api-key:
    secure: E0lYmM3qPeocEdD7fbDooxy3rpH9eyUZgd02v3WkbKeY6LVhvIgP19ESrYilrKUw7Ahx9mKCmlcnpS/iix3LDXUwbfAsf4MEvjBBI8SpQLCBb5k7jJktr81KI9hOL39kz4quPULINJh6/3rKb7puJOu55odEpH+lMuicBuXzCndZRNLtiXJvaYOd0hGYapEQjgU/9r7HI0MjloauyrfEwqpOUVv+2M4Rq38Mqq2Le5XEVJzUg9Qos5V7RQsdSqjfG38FYJ6HZ4LQh4i78eEvhurMnaakFuPetS4RrwpEAy3lAM1FEpbFZPVwvptVSEyskGje50a9rNv0UOUdpIqNEoMhn6rz79ex4XKuWRw9AeQ2gO9de7dq9LbwyIythr567TbypNF/0OQL3laqysyiFch2x5L50e4aHZ9hSUDhxDRy5l1P+ugiedlzVxzdoHGRwvh0EHTpNbWDiUwgK+kBqAc7gOpKqKNPpVtvb2vwRlQ3zeaDTcjcG95KnGqSoWkNI57lPQdyUMayX58EO6GP5CpbsCxmW8B0lZSbk1+7onY/TLM6mWD17k0JnhQ91MrdwW5MEDsLN9mZoBSTFWtIvW7OGFrmyZfNSfclmIu2FjaWWTyhz54yg0B0O0VMmfgxF4nqScaCYF5FSIociUjx45+IIAqfzCeHAXlQTpmpu1I=
after_deploy:
- echo "${PROJECT_NAME}" | grep -q "releases"; if [[ $? -eq 0 ]]; then run_coverage="false";
  else run_coverage=; fi;
- if [[ "${TRAVIS_OS_NAME}" == "linux" && ${TRAVIS_R_VERSION_STRING} = "release" &&
  -z "${run_coverage}" ]]; then echo 'covr::coveralls(type = "all", quiet = FALSE)'
  > neuroc_covr.R ; travis_wait 100 Rscript neuroc_covr.R ; rm neuroc_covr.R ; fi
